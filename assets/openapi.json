{
  "openapi": "3.0.0",
  "info": {
    "title": "api",
    "version": "0.0.1",
    "description": "api",
    "contact": {
      "name": "wjcleanrobotics",
      "email": "walter.j@cleanrobotics.com"
    }
  },
  "paths": {
    "/agent/edit/number": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "agentChangeNumber",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.agentChangeNumber"
      }
    },
    "/agent-solution-combo/count": {
      "get": {
        "x-controller-name": "AgentSolutionComboController",
        "x-operation-name": "count",
        "tags": [
          "AgentSolutionComboController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AgentSolution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AgentSolution>"
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionComboController.count"
      }
    },
    "/agent-solution-combo/{id}": {
      "put": {
        "x-controller-name": "AgentSolutionComboController",
        "x-operation-name": "replaceById",
        "tags": [
          "AgentSolutionComboController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "AgentSolution PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionComboController.replaceById"
      },
      "patch": {
        "x-controller-name": "AgentSolutionComboController",
        "x-operation-name": "updateById",
        "tags": [
          "AgentSolutionComboController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "AgentSolution PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentSolutionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionComboController.updateById"
      },
      "get": {
        "x-controller-name": "AgentSolutionComboController",
        "x-operation-name": "findById",
        "tags": [
          "AgentSolutionComboController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentSolutionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentSolution.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionComboController.findById"
      },
      "delete": {
        "x-controller-name": "AgentSolutionComboController",
        "x-operation-name": "deleteById",
        "tags": [
          "AgentSolutionComboController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "AgentSolution DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "AgentSolutionComboController.deleteById"
      }
    },
    "/agent-solution-combo": {
      "post": {
        "x-controller-name": "AgentSolutionComboController",
        "x-operation-name": "create",
        "tags": [
          "AgentSolutionComboController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentSolution"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgentSolution"
              }
            }
          }
        },
        "operationId": "AgentSolutionComboController.create"
      },
      "patch": {
        "x-controller-name": "AgentSolutionComboController",
        "x-operation-name": "updateAll",
        "tags": [
          "AgentSolutionComboController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AgentSolution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AgentSolution>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentSolutionPartial"
              }
            }
          }
        },
        "operationId": "AgentSolutionComboController.updateAll"
      },
      "get": {
        "x-controller-name": "AgentSolutionComboController",
        "x-operation-name": "find",
        "tags": [
          "AgentSolutionComboController"
        ],
        "responses": {
          "200": {
            "description": "Array of AgentSolution model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentSolutionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentSolution.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionComboController.find"
      }
    },
    "/agent-solutions/{id}/agent": {
      "post": {
        "x-controller-name": "AgentSolutionAgentController",
        "x-operation-name": "create",
        "tags": [
          "AgentSolutionAgentController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgentInAgentSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionAgentController.create"
      },
      "patch": {
        "x-controller-name": "AgentSolutionAgentController",
        "x-operation-name": "patch",
        "tags": [
          "AgentSolutionAgentController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution.Agent PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Agent.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Agent>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionAgentController.patch"
      },
      "get": {
        "x-controller-name": "AgentSolutionAgentController",
        "x-operation-name": "get",
        "tags": [
          "AgentSolutionAgentController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution has one Agent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionAgentController.get"
      },
      "delete": {
        "x-controller-name": "AgentSolutionAgentController",
        "x-operation-name": "delete",
        "tags": [
          "AgentSolutionAgentController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution.Agent DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Agent.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Agent>"
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionAgentController.delete"
      }
    },
    "/agent-solutions/{id}/client": {
      "post": {
        "x-controller-name": "AgentSolutionClientController",
        "x-operation-name": "create",
        "tags": [
          "AgentSolutionClientController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClientInAgentSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionClientController.create"
      },
      "patch": {
        "x-controller-name": "AgentSolutionClientController",
        "x-operation-name": "patch",
        "tags": [
          "AgentSolutionClientController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution.Client PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Client.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Client>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionClientController.patch"
      },
      "get": {
        "x-controller-name": "AgentSolutionClientController",
        "x-operation-name": "get",
        "tags": [
          "AgentSolutionClientController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution has one Client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionClientController.get"
      },
      "delete": {
        "x-controller-name": "AgentSolutionClientController",
        "x-operation-name": "delete",
        "tags": [
          "AgentSolutionClientController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution.Client DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Client.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Client>"
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionClientController.delete"
      }
    },
    "/agent-solutions/{id}/solution": {
      "post": {
        "x-controller-name": "AgentSolutionSolutionController",
        "x-operation-name": "create",
        "tags": [
          "AgentSolutionSolutionController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSolutionInAgentSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionSolutionController.create"
      },
      "patch": {
        "x-controller-name": "AgentSolutionSolutionController",
        "x-operation-name": "patch",
        "tags": [
          "AgentSolutionSolutionController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution.Solution PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionSolutionController.patch"
      },
      "get": {
        "x-controller-name": "AgentSolutionSolutionController",
        "x-operation-name": "get",
        "tags": [
          "AgentSolutionSolutionController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution has one Solution",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionSolutionController.get"
      },
      "delete": {
        "x-controller-name": "AgentSolutionSolutionController",
        "x-operation-name": "delete",
        "tags": [
          "AgentSolutionSolutionController"
        ],
        "responses": {
          "200": {
            "description": "AgentSolution.Solution DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionSolutionController.delete"
      }
    },
    "/agents/count": {
      "get": {
        "x-controller-name": "AgentController",
        "x-operation-name": "count",
        "tags": [
          "AgentController"
        ],
        "responses": {
          "200": {
            "description": "Agent model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Agent.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Agent>"
                }
              }
            }
          }
        ],
        "operationId": "AgentController.count"
      }
    },
    "/agents/{id}/agent-solutions": {
      "post": {
        "x-controller-name": "AgentAgentSolutionController",
        "x-operation-name": "create",
        "tags": [
          "AgentAgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Agent model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentSolution"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgentSolutionInAgent"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentAgentSolutionController.create"
      },
      "patch": {
        "x-controller-name": "AgentAgentSolutionController",
        "x-operation-name": "patch",
        "tags": [
          "AgentAgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Agent.AgentSolution PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AgentSolution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AgentSolution>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentSolutionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentAgentSolutionController.patch"
      },
      "get": {
        "x-controller-name": "AgentAgentSolutionController",
        "x-operation-name": "find",
        "tags": [
          "AgentAgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Agent has many AgentSolution",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentSolution"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "AgentAgentSolutionController.find"
      },
      "delete": {
        "x-controller-name": "AgentAgentSolutionController",
        "x-operation-name": "delete",
        "tags": [
          "AgentAgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Agent.AgentSolution DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AgentSolution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AgentSolution>"
                }
              }
            }
          }
        ],
        "operationId": "AgentAgentSolutionController.delete"
      }
    },
    "/agents/{id}/clients": {
      "post": {
        "x-controller-name": "AgentClientController",
        "x-operation-name": "create",
        "tags": [
          "AgentClientController"
        ],
        "responses": {
          "200": {
            "description": "create a Client model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClientInAgent"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentClientController.create"
      },
      "patch": {
        "x-controller-name": "AgentClientController",
        "x-operation-name": "patch",
        "tags": [
          "AgentClientController"
        ],
        "responses": {
          "200": {
            "description": "Agent.Client PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Client.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Client>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentClientController.patch"
      },
      "get": {
        "x-controller-name": "AgentClientController",
        "x-operation-name": "find",
        "tags": [
          "AgentClientController"
        ],
        "responses": {
          "200": {
            "description": "Array of Agent has many Client through AgentSolution",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "AgentClientController.find"
      },
      "delete": {
        "x-controller-name": "AgentClientController",
        "x-operation-name": "delete",
        "tags": [
          "AgentClientController"
        ],
        "responses": {
          "200": {
            "description": "Agent.Client DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Client.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Client>"
                }
              }
            }
          }
        ],
        "operationId": "AgentClientController.delete"
      }
    },
    "/agents/{id}/extension": {
      "post": {
        "x-controller-name": "AgentExtensionController",
        "x-operation-name": "create",
        "tags": [
          "AgentExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Agent model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExtensionInAgent"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentExtensionController.create"
      },
      "patch": {
        "x-controller-name": "AgentExtensionController",
        "x-operation-name": "patch",
        "tags": [
          "AgentExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Agent.Extension PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Extension.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Extension>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtensionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentExtensionController.patch"
      },
      "get": {
        "x-controller-name": "AgentExtensionController",
        "x-operation-name": "get",
        "tags": [
          "AgentExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Agent has one Extension",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "AgentExtensionController.get"
      },
      "delete": {
        "x-controller-name": "AgentExtensionController",
        "x-operation-name": "delete",
        "tags": [
          "AgentExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Agent.Extension DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Extension.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Extension>"
                }
              }
            }
          }
        ],
        "operationId": "AgentExtensionController.delete"
      }
    },
    "/agents/{id}/solutions": {
      "post": {
        "x-controller-name": "AgentSolutionController",
        "x-operation-name": "create",
        "tags": [
          "AgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "create a Solution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSolutionInAgent"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionController.create"
      },
      "patch": {
        "x-controller-name": "AgentSolutionController",
        "x-operation-name": "patch",
        "tags": [
          "AgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Agent.Solution PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentSolutionController.patch"
      },
      "get": {
        "x-controller-name": "AgentSolutionController",
        "x-operation-name": "find",
        "tags": [
          "AgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Agent has many Solution through AgentSolution",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Solution"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionController.find"
      },
      "delete": {
        "x-controller-name": "AgentSolutionController",
        "x-operation-name": "delete",
        "tags": [
          "AgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Agent.Solution DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "operationId": "AgentSolutionController.delete"
      }
    },
    "/agents/{id}": {
      "put": {
        "x-controller-name": "AgentController",
        "x-operation-name": "replaceById",
        "tags": [
          "AgentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Agent PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agent"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentController.replaceById"
      },
      "patch": {
        "x-controller-name": "AgentController",
        "x-operation-name": "updateById",
        "tags": [
          "AgentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Agent PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AgentController.updateById"
      },
      "get": {
        "x-controller-name": "AgentController",
        "x-operation-name": "findById",
        "tags": [
          "AgentController"
        ],
        "responses": {
          "200": {
            "description": "Agent model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AgentController.findById"
      },
      "delete": {
        "x-controller-name": "AgentController",
        "x-operation-name": "deleteById",
        "tags": [
          "AgentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Agent DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "AgentController.deleteById"
      }
    },
    "/agents": {
      "post": {
        "x-controller-name": "AgentController",
        "x-operation-name": "create",
        "tags": [
          "AgentController"
        ],
        "responses": {
          "200": {
            "description": "Agent model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgent"
              }
            }
          }
        },
        "operationId": "AgentController.create"
      },
      "patch": {
        "x-controller-name": "AgentController",
        "x-operation-name": "updateAll",
        "tags": [
          "AgentController"
        ],
        "responses": {
          "200": {
            "description": "Agent PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Agent.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Agent>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentPartial"
              }
            }
          }
        },
        "operationId": "AgentController.updateAll"
      },
      "get": {
        "x-controller-name": "AgentController",
        "x-operation-name": "find",
        "tags": [
          "AgentController"
        ],
        "responses": {
          "200": {
            "description": "Array of Agent model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AgentController.find"
      }
    },
    "/auth/login-token": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "loginWithClientUser",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.loginWithClientUser"
      }
    },
    "/available/numbers": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "availableNumbers",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "operationId": "PingController.availableNumbers"
      }
    },
    "/buy-number": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "buyNumber",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Return value of PingController.buyNumber"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.buyNumber"
      }
    },
    "/client/edit/music": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "clientEditMusic",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.clientEditMusic"
      }
    },
    "/client/edit/queue": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "clientEditQueue",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.clientEditQueue"
      }
    },
    "/clients/count": {
      "get": {
        "x-controller-name": "ClientsController",
        "x-operation-name": "count",
        "tags": [
          "ClientsController"
        ],
        "responses": {
          "200": {
            "description": "Client model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Client.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Client>"
                }
              }
            }
          }
        ],
        "operationId": "ClientsController.count"
      }
    },
    "/clients/{id}/solutions": {
      "post": {
        "x-controller-name": "ClientSolutionController",
        "x-operation-name": "create",
        "tags": [
          "ClientSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Client model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSolutionInClient"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ClientSolutionController.create"
      },
      "patch": {
        "x-controller-name": "ClientSolutionController",
        "x-operation-name": "patch",
        "tags": [
          "ClientSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Client.Solution PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ClientSolutionController.patch"
      },
      "get": {
        "x-controller-name": "ClientSolutionController",
        "x-operation-name": "find",
        "tags": [
          "ClientSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Client has many Solution",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Solution"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "ClientSolutionController.find"
      },
      "delete": {
        "x-controller-name": "ClientSolutionController",
        "x-operation-name": "delete",
        "tags": [
          "ClientSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Client.Solution DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "operationId": "ClientSolutionController.delete"
      }
    },
    "/clients/{id}": {
      "put": {
        "x-controller-name": "ClientsController",
        "x-operation-name": "replaceById",
        "tags": [
          "ClientsController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Client PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ClientsController.replaceById"
      },
      "patch": {
        "x-controller-name": "ClientsController",
        "x-operation-name": "updateById",
        "tags": [
          "ClientsController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Client PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ClientsController.updateById"
      },
      "get": {
        "x-controller-name": "ClientsController",
        "x-operation-name": "findById",
        "tags": [
          "ClientsController"
        ],
        "responses": {
          "200": {
            "description": "Client model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ClientsController.findById"
      },
      "delete": {
        "x-controller-name": "ClientsController",
        "x-operation-name": "deleteById",
        "tags": [
          "ClientsController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Client DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "ClientsController.deleteById"
      }
    },
    "/clients": {
      "post": {
        "x-controller-name": "ClientsController",
        "x-operation-name": "create",
        "tags": [
          "ClientsController"
        ],
        "responses": {
          "200": {
            "description": "Client model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewClient"
              }
            }
          }
        },
        "operationId": "ClientsController.create"
      },
      "patch": {
        "x-controller-name": "ClientsController",
        "x-operation-name": "updateAll",
        "tags": [
          "ClientsController"
        ],
        "responses": {
          "200": {
            "description": "Client PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Client.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Client>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientPartial"
              }
            }
          }
        },
        "operationId": "ClientsController.updateAll"
      },
      "get": {
        "x-controller-name": "ClientsController",
        "x-operation-name": "find",
        "tags": [
          "ClientsController"
        ],
        "responses": {
          "200": {
            "description": "Array of Client model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ClientsController.find"
      }
    },
    "/create/agent": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "createAgent",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.createAgent"
      }
    },
    "/create/hold-music": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "createHoldMusic",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.createHoldMusic"
      }
    },
    "/create/incoming-route": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "createIncoming",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.createIncoming"
      }
    },
    "/create/queue": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "createQueue",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.createQueue"
      }
    },
    "/create/solution": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "createSolution",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "operationId": "PingController.createSolution"
      }
    },
    "/extensions/count": {
      "get": {
        "x-controller-name": "ExtensionController",
        "x-operation-name": "count",
        "tags": [
          "ExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Extension model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Extension.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Extension>"
                }
              }
            }
          }
        ],
        "operationId": "ExtensionController.count"
      }
    },
    "/extensions/{id}": {
      "put": {
        "x-controller-name": "ExtensionController",
        "x-operation-name": "replaceById",
        "tags": [
          "ExtensionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Extension PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Extension"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ExtensionController.replaceById"
      },
      "patch": {
        "x-controller-name": "ExtensionController",
        "x-operation-name": "updateById",
        "tags": [
          "ExtensionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Extension PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtensionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ExtensionController.updateById"
      },
      "get": {
        "x-controller-name": "ExtensionController",
        "x-operation-name": "findById",
        "tags": [
          "ExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Extension model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ExtensionController.findById"
      },
      "delete": {
        "x-controller-name": "ExtensionController",
        "x-operation-name": "deleteById",
        "tags": [
          "ExtensionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Extension DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "ExtensionController.deleteById"
      }
    },
    "/extensions": {
      "post": {
        "x-controller-name": "ExtensionController",
        "x-operation-name": "create",
        "tags": [
          "ExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Extension model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExtension"
              }
            }
          }
        },
        "operationId": "ExtensionController.create"
      },
      "patch": {
        "x-controller-name": "ExtensionController",
        "x-operation-name": "updateAll",
        "tags": [
          "ExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Extension PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Extension.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Extension>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtensionPartial"
              }
            }
          }
        },
        "operationId": "ExtensionController.updateAll"
      },
      "get": {
        "x-controller-name": "ExtensionController",
        "x-operation-name": "find",
        "tags": [
          "ExtensionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Extension model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtensionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Extension.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ExtensionController.find"
      }
    },
    "/files": {
      "post": {
        "x-controller-name": "FileUploadController",
        "x-operation-name": "fileUpload",
        "tags": [
          "FileUploadController"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Files and fields"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "x-parser": "stream",
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "description": "Request body for multipart/form-data based file upload",
          "required": true
        },
        "operationId": "FileUploadController.fileUpload"
      }
    },
    "/forms/count": {
      "get": {
        "x-controller-name": "FormController",
        "x-operation-name": "count",
        "tags": [
          "FormController"
        ],
        "responses": {
          "200": {
            "description": "Form model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Form.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Form>"
                }
              }
            }
          }
        ],
        "operationId": "FormController.count"
      }
    },
    "/forms/{id}/solution": {
      "post": {
        "x-controller-name": "FormSolutionController",
        "x-operation-name": "create",
        "tags": [
          "FormSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Form model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSolutionInForm"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FormSolutionController.create"
      },
      "patch": {
        "x-controller-name": "FormSolutionController",
        "x-operation-name": "patch",
        "tags": [
          "FormSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Form.Solution PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FormSolutionController.patch"
      },
      "get": {
        "x-controller-name": "FormSolutionController",
        "x-operation-name": "get",
        "tags": [
          "FormSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Form has one Solution",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "FormSolutionController.get"
      },
      "delete": {
        "x-controller-name": "FormSolutionController",
        "x-operation-name": "delete",
        "tags": [
          "FormSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Form.Solution DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "operationId": "FormSolutionController.delete"
      }
    },
    "/forms/{id}": {
      "put": {
        "x-controller-name": "FormController",
        "x-operation-name": "replaceById",
        "tags": [
          "FormController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Form PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FormController.replaceById"
      },
      "patch": {
        "x-controller-name": "FormController",
        "x-operation-name": "updateById",
        "tags": [
          "FormController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Form PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FormController.updateById"
      },
      "get": {
        "x-controller-name": "FormController",
        "x-operation-name": "findById",
        "tags": [
          "FormController"
        ],
        "responses": {
          "200": {
            "description": "Form model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form.Filter"
                }
              }
            }
          }
        ],
        "operationId": "FormController.findById"
      },
      "delete": {
        "x-controller-name": "FormController",
        "x-operation-name": "deleteById",
        "tags": [
          "FormController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Form DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "FormController.deleteById"
      }
    },
    "/forms": {
      "post": {
        "x-controller-name": "FormController",
        "x-operation-name": "create",
        "tags": [
          "FormController"
        ],
        "responses": {
          "200": {
            "description": "Form model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewForm"
              }
            }
          }
        },
        "operationId": "FormController.create"
      },
      "patch": {
        "x-controller-name": "FormController",
        "x-operation-name": "updateAll",
        "tags": [
          "FormController"
        ],
        "responses": {
          "200": {
            "description": "Form PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Form.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Form>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormPartial"
              }
            }
          }
        },
        "operationId": "FormController.updateAll"
      },
      "get": {
        "x-controller-name": "FormController",
        "x-operation-name": "find",
        "tags": [
          "FormController"
        ],
        "responses": {
          "200": {
            "description": "Array of Form model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FormWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "FormController.find"
      }
    },
    "/music/count": {
      "get": {
        "x-controller-name": "MusicController",
        "x-operation-name": "count",
        "tags": [
          "MusicController"
        ],
        "responses": {
          "200": {
            "description": "Music model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Music.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Music>"
                }
              }
            }
          }
        ],
        "operationId": "MusicController.count"
      }
    },
    "/music/{id}": {
      "put": {
        "x-controller-name": "MusicController",
        "x-operation-name": "replaceById",
        "tags": [
          "MusicController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Music PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Music"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "MusicController.replaceById"
      },
      "patch": {
        "x-controller-name": "MusicController",
        "x-operation-name": "updateById",
        "tags": [
          "MusicController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Music PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MusicPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "MusicController.updateById"
      },
      "get": {
        "x-controller-name": "MusicController",
        "x-operation-name": "findById",
        "tags": [
          "MusicController"
        ],
        "responses": {
          "200": {
            "description": "Music model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Music.Filter"
                }
              }
            }
          }
        ],
        "operationId": "MusicController.findById"
      },
      "delete": {
        "x-controller-name": "MusicController",
        "x-operation-name": "deleteById",
        "tags": [
          "MusicController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Music DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "MusicController.deleteById"
      }
    },
    "/music": {
      "post": {
        "x-controller-name": "MusicController",
        "x-operation-name": "create",
        "tags": [
          "MusicController"
        ],
        "responses": {
          "200": {
            "description": "Music model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Music"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMusic"
              }
            }
          }
        },
        "operationId": "MusicController.create"
      },
      "patch": {
        "x-controller-name": "MusicController",
        "x-operation-name": "updateAll",
        "tags": [
          "MusicController"
        ],
        "responses": {
          "200": {
            "description": "Music PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Music.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Music>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MusicPartial"
              }
            }
          }
        },
        "operationId": "MusicController.updateAll"
      },
      "get": {
        "x-controller-name": "MusicController",
        "x-operation-name": "find",
        "tags": [
          "MusicController"
        ],
        "responses": {
          "200": {
            "description": "Array of Music model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MusicWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Music.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "MusicController.find"
      }
    },
    "/phone-numbers/count": {
      "get": {
        "x-controller-name": "PhoneNumberController",
        "x-operation-name": "count",
        "tags": [
          "PhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "PhoneNumber model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PhoneNumber.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<PhoneNumber>"
                }
              }
            }
          }
        ],
        "operationId": "PhoneNumberController.count"
      }
    },
    "/phone-numbers/{id}": {
      "put": {
        "x-controller-name": "PhoneNumberController",
        "x-operation-name": "replaceById",
        "tags": [
          "PhoneNumberController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "PhoneNumber PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneNumber"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PhoneNumberController.replaceById"
      },
      "patch": {
        "x-controller-name": "PhoneNumberController",
        "x-operation-name": "updateById",
        "tags": [
          "PhoneNumberController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "PhoneNumber PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneNumberPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "PhoneNumberController.updateById"
      },
      "get": {
        "x-controller-name": "PhoneNumberController",
        "x-operation-name": "findById",
        "tags": [
          "PhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "PhoneNumber model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumberWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber.Filter"
                }
              }
            }
          }
        ],
        "operationId": "PhoneNumberController.findById"
      },
      "delete": {
        "x-controller-name": "PhoneNumberController",
        "x-operation-name": "deleteById",
        "tags": [
          "PhoneNumberController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "PhoneNumber DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "PhoneNumberController.deleteById"
      }
    },
    "/phone-numbers": {
      "post": {
        "x-controller-name": "PhoneNumberController",
        "x-operation-name": "create",
        "tags": [
          "PhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "PhoneNumber model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPhoneNumber"
              }
            }
          }
        },
        "operationId": "PhoneNumberController.create"
      },
      "patch": {
        "x-controller-name": "PhoneNumberController",
        "x-operation-name": "updateAll",
        "tags": [
          "PhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "PhoneNumber PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PhoneNumber.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<PhoneNumber>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneNumberPartial"
              }
            }
          }
        },
        "operationId": "PhoneNumberController.updateAll"
      },
      "get": {
        "x-controller-name": "PhoneNumberController",
        "x-operation-name": "find",
        "tags": [
          "PhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "Array of PhoneNumber model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhoneNumberWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "PhoneNumberController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/purchase/number": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "purchaseNumber",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "operationId": "PingController.purchaseNumber"
      }
    },
    "/queue/add/agent": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "addAgent",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.addAgent"
      }
    },
    "/queues/count": {
      "get": {
        "x-controller-name": "QueueController",
        "x-operation-name": "count",
        "tags": [
          "QueueController"
        ],
        "responses": {
          "200": {
            "description": "Queue model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Queue.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Queue>"
                }
              }
            }
          }
        ],
        "operationId": "QueueController.count"
      }
    },
    "/queues/{id}": {
      "put": {
        "x-controller-name": "QueueController",
        "x-operation-name": "replaceById",
        "tags": [
          "QueueController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Queue PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Queue"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "QueueController.replaceById"
      },
      "patch": {
        "x-controller-name": "QueueController",
        "x-operation-name": "updateById",
        "tags": [
          "QueueController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Queue PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueuePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "QueueController.updateById"
      },
      "get": {
        "x-controller-name": "QueueController",
        "x-operation-name": "findById",
        "tags": [
          "QueueController"
        ],
        "responses": {
          "200": {
            "description": "Queue model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queue.Filter"
                }
              }
            }
          }
        ],
        "operationId": "QueueController.findById"
      },
      "delete": {
        "x-controller-name": "QueueController",
        "x-operation-name": "deleteById",
        "tags": [
          "QueueController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Queue DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "QueueController.deleteById"
      }
    },
    "/queues": {
      "post": {
        "x-controller-name": "QueueController",
        "x-operation-name": "create",
        "tags": [
          "QueueController"
        ],
        "responses": {
          "200": {
            "description": "Queue model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queue"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewQueue"
              }
            }
          }
        },
        "operationId": "QueueController.create"
      },
      "patch": {
        "x-controller-name": "QueueController",
        "x-operation-name": "updateAll",
        "tags": [
          "QueueController"
        ],
        "responses": {
          "200": {
            "description": "Queue PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Queue.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Queue>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueuePartial"
              }
            }
          }
        },
        "operationId": "QueueController.updateAll"
      },
      "get": {
        "x-controller-name": "QueueController",
        "x-operation-name": "find",
        "tags": [
          "QueueController"
        ],
        "responses": {
          "200": {
            "description": "Array of Queue model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueueWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queue.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "QueueController.find"
      }
    },
    "/send/text": {
      "post": {
        "x-controller-name": "PingController",
        "x-operation-name": "sendTwilioMessage",
        "tags": [
          "PingController"
        ],
        "responses": {},
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "operationId": "PingController.sendTwilioMessage"
      }
    },
    "/solutions/count": {
      "get": {
        "x-controller-name": "SolutionController",
        "x-operation-name": "count",
        "tags": [
          "SolutionController"
        ],
        "responses": {
          "200": {
            "description": "Solution model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "operationId": "SolutionController.count"
      }
    },
    "/solutions/{id}/agent-solutions": {
      "post": {
        "x-controller-name": "SolutionAgentSolutionController",
        "x-operation-name": "create",
        "tags": [
          "SolutionAgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Solution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentSolution"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgentSolutionInSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionAgentSolutionController.create"
      },
      "patch": {
        "x-controller-name": "SolutionAgentSolutionController",
        "x-operation-name": "patch",
        "tags": [
          "SolutionAgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Solution.AgentSolution PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AgentSolution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AgentSolution>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentSolutionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionAgentSolutionController.patch"
      },
      "get": {
        "x-controller-name": "SolutionAgentSolutionController",
        "x-operation-name": "find",
        "tags": [
          "SolutionAgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Solution has many AgentSolution",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentSolution"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "SolutionAgentSolutionController.find"
      },
      "delete": {
        "x-controller-name": "SolutionAgentSolutionController",
        "x-operation-name": "delete",
        "tags": [
          "SolutionAgentSolutionController"
        ],
        "responses": {
          "200": {
            "description": "Solution.AgentSolution DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AgentSolution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AgentSolution>"
                }
              }
            }
          }
        ],
        "operationId": "SolutionAgentSolutionController.delete"
      }
    },
    "/solutions/{id}/agents": {
      "post": {
        "x-controller-name": "SolutionAgentController",
        "x-operation-name": "create",
        "tags": [
          "SolutionAgentController"
        ],
        "responses": {
          "200": {
            "description": "create a Agent model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgentInSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionAgentController.create"
      },
      "patch": {
        "x-controller-name": "SolutionAgentController",
        "x-operation-name": "patch",
        "tags": [
          "SolutionAgentController"
        ],
        "responses": {
          "200": {
            "description": "Solution.Agent PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Agent.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Agent>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionAgentController.patch"
      },
      "get": {
        "x-controller-name": "SolutionAgentController",
        "x-operation-name": "find",
        "tags": [
          "SolutionAgentController"
        ],
        "responses": {
          "200": {
            "description": "Array of Solution has many Agent through AgentSolution",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "SolutionAgentController.find"
      },
      "delete": {
        "x-controller-name": "SolutionAgentController",
        "x-operation-name": "delete",
        "tags": [
          "SolutionAgentController"
        ],
        "responses": {
          "200": {
            "description": "Solution.Agent DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Agent.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Agent>"
                }
              }
            }
          }
        ],
        "operationId": "SolutionAgentController.delete"
      }
    },
    "/solutions/{id}/client": {
      "get": {
        "x-controller-name": "SolutionClientController",
        "x-operation-name": "getClient",
        "tags": [
          "SolutionClientController"
        ],
        "responses": {
          "200": {
            "description": "Client belonging to Solution",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "SolutionClientController.getClient"
      }
    },
    "/solutions/{id}/form": {
      "post": {
        "x-controller-name": "SolutionFormController",
        "x-operation-name": "create",
        "tags": [
          "SolutionFormController"
        ],
        "responses": {
          "200": {
            "description": "Solution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFormInSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionFormController.create"
      },
      "patch": {
        "x-controller-name": "SolutionFormController",
        "x-operation-name": "patch",
        "tags": [
          "SolutionFormController"
        ],
        "responses": {
          "200": {
            "description": "Solution.Form PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Form.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Form>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionFormController.patch"
      },
      "get": {
        "x-controller-name": "SolutionFormController",
        "x-operation-name": "get",
        "tags": [
          "SolutionFormController"
        ],
        "responses": {
          "200": {
            "description": "Solution has one Form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "SolutionFormController.get"
      },
      "delete": {
        "x-controller-name": "SolutionFormController",
        "x-operation-name": "delete",
        "tags": [
          "SolutionFormController"
        ],
        "responses": {
          "200": {
            "description": "Solution.Form DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Form.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Form>"
                }
              }
            }
          }
        ],
        "operationId": "SolutionFormController.delete"
      }
    },
    "/solutions/{id}/music": {
      "post": {
        "x-controller-name": "SolutionMusicController",
        "x-operation-name": "create",
        "tags": [
          "SolutionMusicController"
        ],
        "responses": {
          "200": {
            "description": "Solution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Music"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewMusicInSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionMusicController.create"
      },
      "patch": {
        "x-controller-name": "SolutionMusicController",
        "x-operation-name": "patch",
        "tags": [
          "SolutionMusicController"
        ],
        "responses": {
          "200": {
            "description": "Solution.Music PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Music.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Music>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MusicPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionMusicController.patch"
      },
      "get": {
        "x-controller-name": "SolutionMusicController",
        "x-operation-name": "get",
        "tags": [
          "SolutionMusicController"
        ],
        "responses": {
          "200": {
            "description": "Solution has one Music",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Music"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "SolutionMusicController.get"
      },
      "delete": {
        "x-controller-name": "SolutionMusicController",
        "x-operation-name": "delete",
        "tags": [
          "SolutionMusicController"
        ],
        "responses": {
          "200": {
            "description": "Solution.Music DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Music.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Music>"
                }
              }
            }
          }
        ],
        "operationId": "SolutionMusicController.delete"
      }
    },
    "/solutions/{id}/phone-number": {
      "post": {
        "x-controller-name": "SolutionPhoneNumberController",
        "x-operation-name": "create",
        "tags": [
          "SolutionPhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "Solution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPhoneNumberInSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionPhoneNumberController.create"
      },
      "patch": {
        "x-controller-name": "SolutionPhoneNumberController",
        "x-operation-name": "patch",
        "tags": [
          "SolutionPhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "Solution.PhoneNumber PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PhoneNumber.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<PhoneNumber>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneNumberPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionPhoneNumberController.patch"
      },
      "get": {
        "x-controller-name": "SolutionPhoneNumberController",
        "x-operation-name": "get",
        "tags": [
          "SolutionPhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "Solution has one PhoneNumber",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneNumber"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "SolutionPhoneNumberController.get"
      },
      "delete": {
        "x-controller-name": "SolutionPhoneNumberController",
        "x-operation-name": "delete",
        "tags": [
          "SolutionPhoneNumberController"
        ],
        "responses": {
          "200": {
            "description": "Solution.PhoneNumber DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "PhoneNumber.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<PhoneNumber>"
                }
              }
            }
          }
        ],
        "operationId": "SolutionPhoneNumberController.delete"
      }
    },
    "/solutions/{id}/queue": {
      "post": {
        "x-controller-name": "SolutionQueueController",
        "x-operation-name": "create",
        "tags": [
          "SolutionQueueController"
        ],
        "responses": {
          "200": {
            "description": "Solution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queue"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewQueueInSolution"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionQueueController.create"
      },
      "patch": {
        "x-controller-name": "SolutionQueueController",
        "x-operation-name": "patch",
        "tags": [
          "SolutionQueueController"
        ],
        "responses": {
          "200": {
            "description": "Solution.Queue PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Queue.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Queue>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueuePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionQueueController.patch"
      },
      "get": {
        "x-controller-name": "SolutionQueueController",
        "x-operation-name": "get",
        "tags": [
          "SolutionQueueController"
        ],
        "responses": {
          "200": {
            "description": "Solution has one Queue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queue"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          }
        ],
        "operationId": "SolutionQueueController.get"
      },
      "delete": {
        "x-controller-name": "SolutionQueueController",
        "x-operation-name": "delete",
        "tags": [
          "SolutionQueueController"
        ],
        "responses": {
          "200": {
            "description": "Solution.Queue DELETE success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Queue.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Queue>"
                }
              }
            }
          }
        ],
        "operationId": "SolutionQueueController.delete"
      }
    },
    "/solutions/{id}": {
      "put": {
        "x-controller-name": "SolutionController",
        "x-operation-name": "replaceById",
        "tags": [
          "SolutionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Solution PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionController.replaceById"
      },
      "patch": {
        "x-controller-name": "SolutionController",
        "x-operation-name": "updateById",
        "tags": [
          "SolutionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Solution PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SolutionController.updateById"
      },
      "get": {
        "x-controller-name": "SolutionController",
        "x-operation-name": "findById",
        "tags": [
          "SolutionController"
        ],
        "responses": {
          "200": {
            "description": "Solution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SolutionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SolutionController.findById"
      },
      "delete": {
        "x-controller-name": "SolutionController",
        "x-operation-name": "deleteById",
        "tags": [
          "SolutionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Solution DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "operationId": "SolutionController.deleteById"
      }
    },
    "/solutions": {
      "post": {
        "x-controller-name": "SolutionController",
        "x-operation-name": "create",
        "tags": [
          "SolutionController"
        ],
        "responses": {
          "200": {
            "description": "Solution model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSolution"
              }
            }
          }
        },
        "operationId": "SolutionController.create"
      },
      "patch": {
        "x-controller-name": "SolutionController",
        "x-operation-name": "updateAll",
        "tags": [
          "SolutionController"
        ],
        "responses": {
          "200": {
            "description": "Solution PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Solution.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Solution>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SolutionPartial"
              }
            }
          }
        },
        "operationId": "SolutionController.updateAll"
      },
      "get": {
        "x-controller-name": "SolutionController",
        "x-operation-name": "find",
        "tags": [
          "SolutionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Solution model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SolutionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Solution.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "SolutionController.find"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "AgentSolution": {
        "title": "AgentSolution",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "agentId": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          },
          "clientId": {
            "type": "number"
          },
          "agentAccepted": {
            "type": "number"
          },
          "agentActivated": {
            "type": "number"
          },
          "agentRemoved": {
            "type": "number"
          },
          "solutionActive": {
            "type": "number"
          }
        },
        "required": [
          "agentId",
          "solutionId",
          "clientId",
          "agentAccepted"
        ],
        "additionalProperties": true
      },
      "NewAgentSolutionInAgent": {
        "title": "NewAgentSolutionInAgent",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<AgentSolution, 'id'>, 'agentId'>, schemaOptions: { title: 'NewAgentSolutionInAgent', exclude: [ 'id' ], optional: [ 'agentId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "agentId": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          },
          "clientId": {
            "type": "number"
          },
          "agentAccepted": {
            "type": "number"
          },
          "agentActivated": {
            "type": "number"
          },
          "agentRemoved": {
            "type": "number"
          },
          "solutionActive": {
            "type": "number"
          }
        },
        "required": [
          "solutionId",
          "clientId",
          "agentAccepted"
        ],
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<AgentSolution, 'id'>, 'agentId'>"
      },
      "AgentSolutionPartial": {
        "title": "AgentSolutionPartial",
        "type": "object",
        "description": "(tsType: Partial<AgentSolution>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "agentId": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          },
          "clientId": {
            "type": "number"
          },
          "agentAccepted": {
            "type": "number"
          },
          "agentActivated": {
            "type": "number"
          },
          "agentRemoved": {
            "type": "number"
          },
          "solutionActive": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<AgentSolution>"
      },
      "Client": {
        "title": "Client",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username",
          "name"
        ],
        "additionalProperties": true
      },
      "NewClientInAgent": {
        "title": "NewClientInAgent",
        "type": "object",
        "description": "(tsType: Omit<Client, 'id'>, schemaOptions: { title: 'NewClientInAgent', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username",
          "name"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<Client, 'id'>"
      },
      "ClientPartial": {
        "title": "ClientPartial",
        "type": "object",
        "description": "(tsType: Partial<Client>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<Client>"
      },
      "Extension": {
        "title": "Extension",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "asteriskId": {
            "type": "string"
          },
          "agentId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "asteriskId",
          "agentId"
        ],
        "additionalProperties": true
      },
      "NewExtensionInAgent": {
        "title": "NewExtensionInAgent",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Extension, 'id'>, 'agentId'>, schemaOptions: { title: 'NewExtensionInAgent', exclude: [ 'id' ], optional: [ 'agentId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "asteriskId": {
            "type": "string"
          },
          "agentId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "asteriskId"
        ],
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Extension, 'id'>, 'agentId'>"
      },
      "ExtensionPartial": {
        "title": "ExtensionPartial",
        "type": "object",
        "description": "(tsType: Partial<Extension>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "asteriskId": {
            "type": "string"
          },
          "agentId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<Extension>"
      },
      "Agent": {
        "title": "Agent",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username"
        ],
        "additionalProperties": true
      },
      "NewAgentInAgentSolution": {
        "title": "NewAgentInAgentSolution",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Agent, 'id'>, 'id'>, schemaOptions: { title: 'NewAgentInAgentSolution', exclude: [ 'id' ], optional: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username"
        ],
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Agent, 'id'>, 'id'>"
      },
      "AgentPartial": {
        "title": "AgentPartial",
        "type": "object",
        "description": "(tsType: Partial<Agent>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<Agent>"
      },
      "NewClientInAgentSolution": {
        "title": "NewClientInAgentSolution",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Client, 'id'>, 'id'>, schemaOptions: { title: 'NewClientInAgentSolution', exclude: [ 'id' ], optional: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username",
          "name"
        ],
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Client, 'id'>, 'id'>"
      },
      "NewAgentSolution": {
        "title": "NewAgentSolution",
        "type": "object",
        "description": "(tsType: Omit<AgentSolution, 'id'>, schemaOptions: { title: 'NewAgentSolution', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "agentId": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          },
          "clientId": {
            "type": "number"
          },
          "agentAccepted": {
            "type": "number"
          },
          "agentActivated": {
            "type": "number"
          },
          "agentRemoved": {
            "type": "number"
          },
          "solutionActive": {
            "type": "number"
          }
        },
        "required": [
          "agentId",
          "solutionId",
          "clientId",
          "agentAccepted"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<AgentSolution, 'id'>"
      },
      "UserWithRelations": {
        "title": "UserWithRelations",
        "type": "object",
        "description": "(tsType: UserWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "credentials": {
            "$ref": "#/components/schemas/UserCredentialsWithRelations"
          }
        },
        "required": [
          "firstName",
          "username"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserWithRelations"
      },
      "UserCredentialsWithRelations": {
        "title": "UserCredentialsWithRelations",
        "type": "object",
        "description": "(tsType: UserCredentialsWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          },
          "authProvider": {
            "type": "string"
          },
          "authId": {
            "type": "string"
          },
          "authToken": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "user_id": {
            "$ref": "#/components/schemas/UserWithRelations"
          }
        },
        "required": [
          "userId",
          "authProvider"
        ],
        "additionalProperties": false,
        "x-typescript-type": "UserCredentialsWithRelations"
      },
      "ExtensionWithRelations": {
        "title": "ExtensionWithRelations",
        "type": "object",
        "description": "(tsType: ExtensionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "asteriskId": {
            "type": "string"
          },
          "agentId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "asteriskId",
          "agentId"
        ],
        "additionalProperties": true,
        "x-typescript-type": "ExtensionWithRelations"
      },
      "PhoneNumberWithRelations": {
        "title": "PhoneNumberWithRelations",
        "type": "object",
        "description": "(tsType: PhoneNumberWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "phone_number": {
            "type": "string"
          },
          "twilioId": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "phone_number"
        ],
        "additionalProperties": true,
        "x-typescript-type": "PhoneNumberWithRelations"
      },
      "MusicWithRelations": {
        "title": "MusicWithRelations",
        "type": "object",
        "description": "(tsType: MusicWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "codec": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": true,
        "x-typescript-type": "MusicWithRelations"
      },
      "QueueWithRelations": {
        "title": "QueueWithRelations",
        "type": "object",
        "description": "(tsType: QueueWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "solutionId"
        ],
        "additionalProperties": true,
        "x-typescript-type": "QueueWithRelations"
      },
      "ClientWithRelations": {
        "title": "ClientWithRelations",
        "type": "object",
        "description": "(tsType: ClientWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/UserCredentialsWithRelations"
          },
          "solutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolutionWithRelations"
            }
          }
        },
        "required": [
          "firstName",
          "username",
          "name"
        ],
        "additionalProperties": true,
        "x-typescript-type": "ClientWithRelations"
      },
      "AgentWithRelations": {
        "title": "AgentWithRelations",
        "type": "object",
        "description": "(tsType: AgentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/UserCredentialsWithRelations"
          },
          "extension": {
            "$ref": "#/components/schemas/ExtensionWithRelations"
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientWithRelations"
            }
          },
          "agentSolutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentSolutionWithRelations"
            }
          },
          "solutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SolutionWithRelations"
            }
          }
        },
        "required": [
          "firstName",
          "username"
        ],
        "additionalProperties": true,
        "x-typescript-type": "AgentWithRelations"
      },
      "FormWithRelations": {
        "title": "FormWithRelations",
        "type": "object",
        "description": "(tsType: FormWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "formData": {
            "type": "object"
          },
          "active": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          },
          "solution": {
            "$ref": "#/components/schemas/SolutionWithRelations"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "FormWithRelations"
      },
      "SolutionWithRelations": {
        "title": "SolutionWithRelations",
        "type": "object",
        "description": "(tsType: SolutionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "number"
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "clientId": {
            "type": "number"
          },
          "formId": {
            "type": "number"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/PhoneNumberWithRelations"
          },
          "music": {
            "$ref": "#/components/schemas/MusicWithRelations"
          },
          "queue": {
            "$ref": "#/components/schemas/QueueWithRelations"
          },
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentWithRelations"
            }
          },
          "client": {
            "$ref": "#/components/schemas/ClientWithRelations"
          },
          "agentSolutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentSolutionWithRelations"
            }
          },
          "form": {
            "$ref": "#/components/schemas/FormWithRelations"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "SolutionWithRelations"
      },
      "AgentSolutionWithRelations": {
        "title": "AgentSolutionWithRelations",
        "type": "object",
        "description": "(tsType: AgentSolutionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "agentId": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          },
          "clientId": {
            "type": "number"
          },
          "agentAccepted": {
            "type": "number"
          },
          "agentActivated": {
            "type": "number"
          },
          "agentRemoved": {
            "type": "number"
          },
          "solutionActive": {
            "type": "number"
          },
          "solution": {
            "$ref": "#/components/schemas/SolutionWithRelations"
          },
          "client": {
            "$ref": "#/components/schemas/ClientWithRelations"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentWithRelations"
          }
        },
        "required": [
          "agentId",
          "solutionId",
          "clientId",
          "agentAccepted"
        ],
        "additionalProperties": true,
        "x-typescript-type": "AgentSolutionWithRelations"
      },
      "Solution": {
        "title": "Solution",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "number"
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "clientId": {
            "type": "number"
          },
          "formId": {
            "type": "number"
          }
        },
        "additionalProperties": true
      },
      "NewSolutionInAgentSolution": {
        "title": "NewSolutionInAgentSolution",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Solution, 'id'>, 'id'>, schemaOptions: { title: 'NewSolutionInAgentSolution', exclude: [ 'id' ], optional: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "number"
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "clientId": {
            "type": "number"
          },
          "formId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Solution, 'id'>, 'id'>"
      },
      "SolutionPartial": {
        "title": "SolutionPartial",
        "type": "object",
        "description": "(tsType: Partial<Solution>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "number"
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "clientId": {
            "type": "number"
          },
          "formId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<Solution>"
      },
      "NewSolutionInAgent": {
        "title": "NewSolutionInAgent",
        "type": "object",
        "description": "(tsType: Omit<Solution, 'id'>, schemaOptions: { title: 'NewSolutionInAgent', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "number"
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "clientId": {
            "type": "number"
          },
          "formId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Omit<Solution, 'id'>"
      },
      "NewAgent": {
        "title": "NewAgent",
        "type": "object",
        "description": "(tsType: Omit<Agent, 'id'>, schemaOptions: { title: 'NewAgent', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<Agent, 'id'>"
      },
      "NewSolutionInClient": {
        "title": "NewSolutionInClient",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Solution, 'id'>, 'clientId'>, schemaOptions: { title: 'NewSolutionInClient', exclude: [ 'id' ], optional: [ 'clientId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "number"
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "clientId": {
            "type": "number"
          },
          "formId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Solution, 'id'>, 'clientId'>"
      },
      "NewClient": {
        "title": "NewClient",
        "type": "object",
        "description": "(tsType: Omit<Client, 'id'>, schemaOptions: { title: 'NewClient', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username",
          "name"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<Client, 'id'>"
      },
      "NewExtension": {
        "title": "NewExtension",
        "type": "object",
        "description": "(tsType: Omit<Extension, 'id'>, schemaOptions: { title: 'NewExtension', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "asteriskId": {
            "type": "string"
          },
          "agentId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "asteriskId",
          "agentId"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<Extension, 'id'>"
      },
      "NewSolutionInForm": {
        "title": "NewSolutionInForm",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Solution, 'id'>, 'formId'>, schemaOptions: { title: 'NewSolutionInForm', exclude: [ 'id' ], optional: [ 'formId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "number"
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "clientId": {
            "type": "number"
          },
          "formId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Solution, 'id'>, 'formId'>"
      },
      "Form": {
        "title": "Form",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "formData": {
            "type": "object"
          },
          "active": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "additionalProperties": true
      },
      "NewForm": {
        "title": "NewForm",
        "type": "object",
        "description": "(tsType: Omit<Form, 'id'>, schemaOptions: { title: 'NewForm', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "formData": {
            "type": "object"
          },
          "active": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Omit<Form, 'id'>"
      },
      "FormPartial": {
        "title": "FormPartial",
        "type": "object",
        "description": "(tsType: Partial<Form>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "formData": {
            "type": "object"
          },
          "active": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<Form>"
      },
      "Music": {
        "title": "Music",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "codec": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": true
      },
      "NewMusic": {
        "title": "NewMusic",
        "type": "object",
        "description": "(tsType: Omit<Music, 'id'>, schemaOptions: { title: 'NewMusic', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "codec": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<Music, 'id'>"
      },
      "MusicPartial": {
        "title": "MusicPartial",
        "type": "object",
        "description": "(tsType: Partial<Music>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "codec": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<Music>"
      },
      "PhoneNumber": {
        "title": "PhoneNumber",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "phone_number": {
            "type": "string"
          },
          "twilioId": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "phone_number"
        ],
        "additionalProperties": true
      },
      "NewPhoneNumber": {
        "title": "NewPhoneNumber",
        "type": "object",
        "description": "(tsType: Omit<PhoneNumber, 'id'>, schemaOptions: { title: 'NewPhoneNumber', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "phone_number": {
            "type": "string"
          },
          "twilioId": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "phone_number"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<PhoneNumber, 'id'>"
      },
      "PhoneNumberPartial": {
        "title": "PhoneNumberPartial",
        "type": "object",
        "description": "(tsType: Partial<PhoneNumber>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "phone_number": {
            "type": "string"
          },
          "twilioId": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<PhoneNumber>"
      },
      "Queue": {
        "title": "Queue",
        "type": "object",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "solutionId"
        ],
        "additionalProperties": true
      },
      "NewQueue": {
        "title": "NewQueue",
        "type": "object",
        "description": "(tsType: Omit<Queue, 'id'>, schemaOptions: { title: 'NewQueue', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "name",
          "solutionId"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<Queue, 'id'>"
      },
      "QueuePartial": {
        "title": "QueuePartial",
        "type": "object",
        "description": "(tsType: Partial<Queue>, schemaOptions: { partial: true })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Partial<Queue>"
      },
      "NewAgentSolutionInSolution": {
        "title": "NewAgentSolutionInSolution",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<AgentSolution, 'id'>, 'solutionId'>, schemaOptions: { title: 'NewAgentSolutionInSolution', exclude: [ 'id' ], optional: [ 'solutionId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "agentId": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          },
          "clientId": {
            "type": "number"
          },
          "agentAccepted": {
            "type": "number"
          },
          "agentActivated": {
            "type": "number"
          },
          "agentRemoved": {
            "type": "number"
          },
          "solutionActive": {
            "type": "number"
          }
        },
        "required": [
          "agentId",
          "clientId",
          "agentAccepted"
        ],
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<AgentSolution, 'id'>, 'solutionId'>"
      },
      "NewAgentInSolution": {
        "title": "NewAgentInSolution",
        "type": "object",
        "description": "(tsType: Omit<Agent, 'id'>, schemaOptions: { title: 'NewAgentInSolution', exclude: [ 'id' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "voice_sample": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industry": {
            "type": "string"
          },
          "defaultTenant": {
            "type": "number"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "username"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<Agent, 'id'>"
      },
      "NewFormInSolution": {
        "title": "NewFormInSolution",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Form, 'id'>, 'solutionId'>, schemaOptions: { title: 'NewFormInSolution', exclude: [ 'id' ], optional: [ 'solutionId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "formData": {
            "type": "object"
          },
          "active": {
            "type": "number"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Form, 'id'>, 'solutionId'>"
      },
      "NewMusicInSolution": {
        "title": "NewMusicInSolution",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Music, 'id'>, 'solutionId'>, schemaOptions: { title: 'NewMusicInSolution', exclude: [ 'id' ], optional: [ 'solutionId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "codec": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Music, 'id'>, 'solutionId'>"
      },
      "NewPhoneNumberInSolution": {
        "title": "NewPhoneNumberInSolution",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<PhoneNumber, 'id'>, 'solutionId'>, schemaOptions: { title: 'NewPhoneNumberInSolution', exclude: [ 'id' ], optional: [ 'solutionId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "phone_number": {
            "type": "string"
          },
          "twilioId": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "phone_number"
        ],
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<PhoneNumber, 'id'>, 'solutionId'>"
      },
      "NewQueueInSolution": {
        "title": "NewQueueInSolution",
        "type": "object",
        "description": "(tsType: @loopback/repository-json-schema#Optional<Omit<Queue, 'id'>, 'solutionId'>, schemaOptions: { title: 'NewQueueInSolution', exclude: [ 'id' ], optional: [ 'solutionId' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "solutionId": {
            "type": "number"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": true,
        "x-typescript-type": "@loopback/repository-json-schema#Optional<Omit<Queue, 'id'>, 'solutionId'>"
      },
      "NewSolution": {
        "title": "NewSolution",
        "type": "object",
        "description": "(tsType: Omit<Solution, 'id' | 'agents'>, schemaOptions: { title: 'NewSolution', exclude: [ 'id', 'agents' ] })",
        "properties": {
          "deleted": {
            "type": "boolean"
          },
          "deletedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deletedBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "number"
          },
          "modifiedBy": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "active": {
            "type": "number"
          },
          "agentIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "clientId": {
            "type": "number"
          },
          "formId": {
            "type": "number"
          }
        },
        "additionalProperties": true,
        "x-typescript-type": "Omit<Solution, 'id' | 'agents'>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "AgentSolution.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "AgentSolution.ScopeFilter"
      },
      "AgentSolution.IncludeFilter.Items": {
        "title": "AgentSolution.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/AgentSolution.ScopeFilter"
          }
        }
      },
      "AgentSolution.Filter": {
        "type": "object",
        "title": "AgentSolution.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "agentId": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  },
                  "clientId": {
                    "type": "boolean"
                  },
                  "agentAccepted": {
                    "type": "boolean"
                  },
                  "agentActivated": {
                    "type": "boolean"
                  },
                  "agentRemoved": {
                    "type": "boolean"
                  },
                  "solutionActive": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "AgentSolution.Fields"
          },
          "include": {
            "title": "AgentSolution.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AgentSolution.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AgentSolution>"
      },
      "AgentSolution.Filter1": {
        "type": "object",
        "title": "AgentSolution.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "AgentSolution.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "agentId": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  },
                  "clientId": {
                    "type": "boolean"
                  },
                  "agentAccepted": {
                    "type": "boolean"
                  },
                  "agentActivated": {
                    "type": "boolean"
                  },
                  "agentRemoved": {
                    "type": "boolean"
                  },
                  "solutionActive": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "AgentSolution.Fields"
          },
          "include": {
            "title": "AgentSolution.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AgentSolution.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AgentSolution>"
      },
      "Agent.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Agent.ScopeFilter"
      },
      "Agent.IncludeFilter.Items": {
        "title": "Agent.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Agent.ScopeFilter"
          }
        }
      },
      "Agent.Filter": {
        "type": "object",
        "title": "Agent.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "middleName": {
                    "type": "boolean"
                  },
                  "username": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "phone": {
                    "type": "boolean"
                  },
                  "image": {
                    "type": "boolean"
                  },
                  "voice_sample": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "industry": {
                    "type": "boolean"
                  },
                  "defaultTenant": {
                    "type": "boolean"
                  },
                  "lastLogin": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Agent.Fields"
          },
          "include": {
            "title": "Agent.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Agent.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Agent>"
      },
      "Agent.Filter1": {
        "type": "object",
        "title": "Agent.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Agent.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "middleName": {
                    "type": "boolean"
                  },
                  "username": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "phone": {
                    "type": "boolean"
                  },
                  "image": {
                    "type": "boolean"
                  },
                  "voice_sample": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "industry": {
                    "type": "boolean"
                  },
                  "defaultTenant": {
                    "type": "boolean"
                  },
                  "lastLogin": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Agent.Fields"
          },
          "include": {
            "title": "Agent.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Agent.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Agent>"
      },
      "Client.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Client.ScopeFilter"
      },
      "Client.IncludeFilter.Items": {
        "title": "Client.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Client.ScopeFilter"
          }
        }
      },
      "Client.Filter": {
        "type": "object",
        "title": "Client.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "middleName": {
                    "type": "boolean"
                  },
                  "username": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "phone": {
                    "type": "boolean"
                  },
                  "image": {
                    "type": "boolean"
                  },
                  "voice_sample": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "industry": {
                    "type": "boolean"
                  },
                  "defaultTenant": {
                    "type": "boolean"
                  },
                  "lastLogin": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Client.Fields"
          },
          "include": {
            "title": "Client.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Client.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Client>"
      },
      "Client.Filter1": {
        "type": "object",
        "title": "Client.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Client.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "firstName": {
                    "type": "boolean"
                  },
                  "lastName": {
                    "type": "boolean"
                  },
                  "middleName": {
                    "type": "boolean"
                  },
                  "username": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "boolean"
                  },
                  "phone": {
                    "type": "boolean"
                  },
                  "image": {
                    "type": "boolean"
                  },
                  "voice_sample": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "industry": {
                    "type": "boolean"
                  },
                  "defaultTenant": {
                    "type": "boolean"
                  },
                  "lastLogin": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Client.Fields"
          },
          "include": {
            "title": "Client.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Client.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Client>"
      },
      "Extension.Filter": {
        "type": "object",
        "title": "Extension.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "asteriskId": {
                    "type": "boolean"
                  },
                  "agentId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Extension.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Extension>"
      },
      "Extension.Filter1": {
        "type": "object",
        "title": "Extension.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Extension.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "asteriskId": {
                    "type": "boolean"
                  },
                  "agentId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Extension.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Extension>"
      },
      "Form.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Form.ScopeFilter"
      },
      "Form.IncludeFilter.Items": {
        "title": "Form.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Form.ScopeFilter"
          }
        }
      },
      "Form.Filter": {
        "type": "object",
        "title": "Form.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "formData": {
                    "type": "boolean"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Form.Fields"
          },
          "include": {
            "title": "Form.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Form.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Form>"
      },
      "Form.Filter1": {
        "type": "object",
        "title": "Form.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Form.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "formData": {
                    "type": "boolean"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Form.Fields"
          },
          "include": {
            "title": "Form.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Form.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Form>"
      },
      "Music.Filter": {
        "type": "object",
        "title": "Music.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "link": {
                    "type": "boolean"
                  },
                  "codec": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Music.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Music>"
      },
      "Music.Filter1": {
        "type": "object",
        "title": "Music.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Music.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "link": {
                    "type": "boolean"
                  },
                  "codec": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Music.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Music>"
      },
      "PhoneNumber.Filter": {
        "type": "object",
        "title": "PhoneNumber.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "phone_number": {
                    "type": "boolean"
                  },
                  "twilioId": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "PhoneNumber.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PhoneNumber>"
      },
      "PhoneNumber.Filter1": {
        "type": "object",
        "title": "PhoneNumber.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "PhoneNumber.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "phone_number": {
                    "type": "boolean"
                  },
                  "twilioId": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "PhoneNumber.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<PhoneNumber>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Queue.Filter": {
        "type": "object",
        "title": "Queue.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Queue.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Queue>"
      },
      "Queue.Filter1": {
        "type": "object",
        "title": "Queue.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Queue.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "solutionId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Queue.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Queue>"
      },
      "Solution.ScopeFilter": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Solution.ScopeFilter"
      },
      "Solution.IncludeFilter.Items": {
        "title": "Solution.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Solution.ScopeFilter"
          }
        }
      },
      "Solution.Filter": {
        "type": "object",
        "title": "Solution.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "agentIds": {
                    "type": "boolean"
                  },
                  "clientId": {
                    "type": "boolean"
                  },
                  "formId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Solution.Fields"
          },
          "include": {
            "title": "Solution.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Solution.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Solution>"
      },
      "Solution.Filter1": {
        "type": "object",
        "title": "Solution.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Solution.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "deleted": {
                    "type": "boolean"
                  },
                  "deletedOn": {
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "type": "boolean"
                  },
                  "createdOn": {
                    "type": "boolean"
                  },
                  "modifiedOn": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "type": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "active": {
                    "type": "boolean"
                  },
                  "agentIds": {
                    "type": "boolean"
                  },
                  "clientId": {
                    "type": "boolean"
                  },
                  "formId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "deleted"
                },
                "uniqueItems": true
              }
            ],
            "title": "Solution.Fields"
          },
          "include": {
            "title": "Solution.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Solution.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Solution>"
      }
    }
  }
}